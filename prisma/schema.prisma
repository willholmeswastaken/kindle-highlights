// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./db.sqlite"
  // url      = env("DATABASE_URL")
}

model Example {
  id String @id @default(cuid())
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String            @id @default(cuid())
  name          String?
  email         String?           @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  imports       HighlightImport[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model HighlightImport {
  id             String   @id @default(cuid())
  importedOn     DateTime @default(now())
  userId         String
  containsTitles String?
  totalBookCount Int      @default(0)
  user           User     @relation(fields: [userId], references: [email], onDelete: Cascade)
  books          Book[]
}

model Book {
  id              String          @id @default(cuid())
  author          String
  title           String
  importId        String
  totalHighlights Int             @default(0)
  import          HighlightImport @relation(fields: [importId], references: [id], onDelete: Cascade)
  highlights      Highlight[]
}

model Highlight {
  id       String  @id @default(cuid())
  content  String
  page     String?
  location String
  bookId   String
  book     Book    @relation(fields: [bookId], references: [id], onDelete: Cascade)
}
